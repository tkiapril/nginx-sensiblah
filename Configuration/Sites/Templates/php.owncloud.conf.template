server {
    include Configuration/Common/Meta/listen_all.conf;

    server_name example.com;

    root /var/www/hosts/example.com/public_html;

    #charset koi8-r;
    #access_log /var/log/nginx/log/host.access.log  main;
    

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    #ssl_certificate /var/www/hosts/example.com/ssl_certs/example.com.cert.pem;
    #ssl_certificate_key /var/www/hosts/example.com/ssl_certs/example.com.key.pem;
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /var/www/hosts/example.com/ssl_certs/trusted.cert.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

    include Configuration/Common/Meta/ssl.default.conf;

    include Configuration/Common/use_blacklist.conf;
    include Configuration/Common/letsencrypt.conf;

    include Configuration/Common/Meta/miscellanous.conf;


    include Configuration/Common/owncloud.conf;

    client_max_body_size 10G;
    fastcgi_buffers 64 4K;

    error_page  403              /core/templates/403.php;
    error_page  404              /core/templates/404.php;

    # Uncomment if your server is build with the ngx_pagespeed module
    # This module is currently not supported.
    #pagespeed off;

    # Serving static files: https://doc.owncloud.org/server/8.0/admin_manual/configuration_files/serving_static_files_configuration.html#nginx-x-accel-redirect
    location ^~ /data {
        internal;
        alias /path/to/owncloud_data_dir;

        location /data/username/files/mountname {
            alias /path/to/mountpoint;
        }
    }

    # Optional: set long EXPIRES header on static assets
    location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
    }

    location / {
        rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
        rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
        rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;

        include Configuration/Common/owncloud.deny.conf;

        # The following 2 rules are only needed with webfinger
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

        rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
        rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

        rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

        try_files $uri $uri/ /index.php;
        index index.php;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    
    location ~ \.php(?:$|/) {
        try_files @php-fcgi @php-fcgi;
    }

    #error_page  404              /404.html;

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # Referenced https://github.com/heroku/heroku-buildpack-php/blob/master/conf/nginx/heroku.conf.php
    location @php-fcgi {
        include Configuration/Common/php.conf;
        include Configuration/Common/php.values.conf;
        include Configuration/Common/owncloud.php.conf;

        # apply common php values; append after for local values
        fastcgi_param PHP_VALUE "${RAW_PHP_VALUE}";
        fastcgi_param PHP_ADMIN_VALUE "${RAW_PHP_ADMIN_VALUE}
upload_tmp_dir=/path/to/owncloud_data_dir/tmp_upload
";

        fastcgi_param HTTPS on;
    }
}
